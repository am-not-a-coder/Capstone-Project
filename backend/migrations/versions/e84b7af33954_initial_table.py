"""Initial table

Revision ID: e84b7af33954
Revises: 
Create Date: 2025-07-04 02:01:03.921671

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e84b7af33954'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('document')
    op.drop_table('subArea')
    op.drop_table('area')
    op.drop_table('institute')
    op.drop_table('deadline')
    op.drop_table('announcement')
    op.drop_table('program')
    op.drop_table('auditLog')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.TEXT(),
               type_=sa.String(length=128),
               existing_nullable=False)
        batch_op.drop_constraint(batch_op.f('fk_program'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_area'), type_='foreignkey')
        batch_op.drop_column('suffix')
        batch_op.drop_column('email')
        batch_op.drop_column('profilePic')
        batch_op.drop_column('isOnline')
        batch_op.drop_column('lName')
        batch_op.drop_column('contactNum')
        batch_op.drop_column('isAdmin')
        batch_op.drop_column('areaID')
        batch_op.drop_column('programID')
        batch_op.drop_column('fName')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fName', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('programID', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('areaID', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('isAdmin', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('contactNum', sa.VARCHAR(length=15), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('lName', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('isOnline', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('profilePic', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('email', sa.TEXT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('suffix', sa.VARCHAR(length=5), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_area'), 'area', ['areaID'], ['areaID'])
        batch_op.create_foreign_key(batch_op.f('fk_program'), 'program', ['programID'], ['programID'])
        batch_op.alter_column('password',
               existing_type=sa.String(length=128),
               type_=sa.TEXT(),
               existing_nullable=False)

    op.create_table('auditLog',
    sa.Column('logID', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('employeeID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('date/time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employeeID'], ['user.employeeID'], name=op.f('fk_employeeID')),
    sa.PrimaryKeyConstraint('logID', name=op.f('auditLog_pkey'))
    )
    op.create_table('program',
    sa.Column('programID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('programCode', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('programName', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('programColor', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('programID', name='programID'),
    postgresql_ignore_search_path=False
    )
    op.create_table('announcement',
    sa.Column('announceID', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('employeeID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('announceText', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('duration', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employeeID'], ['user.employeeID'], name=op.f('fk_employeeID')),
    sa.PrimaryKeyConstraint('announceID', name=op.f('announcement_pkey'))
    )
    op.create_table('deadline',
    sa.Column('deadlineID', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('programID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('areaID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('detail', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('due_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['areaID'], ['area.areaID'], name=op.f('fk_areaID')),
    sa.ForeignKeyConstraint(['programID'], ['program.programID'], name=op.f('fk_programID')),
    sa.PrimaryKeyConstraint('deadlineID', name=op.f('deadline_pkey'))
    )
    op.create_table('institute',
    sa.Column('instID', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('programID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('employeeID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('instCode', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('instName', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('instPic', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employeeID'], ['user.employeeID'], name=op.f('fk_employeeID')),
    sa.ForeignKeyConstraint(['programID'], ['program.programID'], name=op.f('fk_programID')),
    sa.PrimaryKeyConstraint('instID', name=op.f('institute_pkey'))
    )
    op.create_table('area',
    sa.Column('areaID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('programID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('areaName', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('subareaID', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['programID'], ['program.programID'], name='fk_programID'),
    sa.ForeignKeyConstraint(['subareaID'], ['subArea.subareaID'], name='fk_subareaID'),
    sa.PrimaryKeyConstraint('areaID', name='pk_areaID'),
    postgresql_ignore_search_path=False
    )
    op.create_table('subArea',
    sa.Column('subareaID', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('docID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('subareaName', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['docID'], ['document.docID'], name='fk_docID'),
    sa.PrimaryKeyConstraint('subareaID', name='sub-area_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('document',
    sa.Column('docID', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('employeeID', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('docName', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('docType', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('docTag', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('docPath', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('isApproved', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employeeID'], ['user.employeeID'], name=op.f('fk_employeeID')),
    sa.PrimaryKeyConstraint('docID', name=op.f('document_pkey'))
    )
    # ### end Alembic commands ###
